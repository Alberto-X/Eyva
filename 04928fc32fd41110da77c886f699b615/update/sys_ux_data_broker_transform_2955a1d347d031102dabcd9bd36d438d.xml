<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_data_broker_transform">
    <sys_ux_data_broker_transform action="INSERT_OR_UPDATE">
        <acl_failure_result/>
        <api_name>x_802331_eyva.MSP modal save action</api_name>
        <description>Saves data from the "manage shift position" (MSP) modal</description>
        <mutates_server_data>true</mutates_server_data>
        <name>MSP modal save action</name>
        <output_schema>{&#13;
  "name": "response",&#13;
  "label": "Response",&#13;
  "description": "The response from the server",&#13;
  "fieldType": "object",&#13;
  "properties": {&#13;
    "message": {&#13;
      "description": "A response message from the server",&#13;
      "fieldType": "string"&#13;
    }&#13;
  }&#13;
}</output_schema>
        <private>false</private>
        <props>[&#13;
  {&#13;
    "name": "workers",&#13;
    "label": "Workers",&#13;
    "description": "Workers and assignments being saved",&#13;
    "readOnly": "false",&#13;
    "fieldType": "array",&#13;
    "mandatory": "true",&#13;
    "defaultValue": []&#13;
  },&#13;
  {&#13;
    "name": "shiftPosition",&#13;
    "label": "Shift position",&#13;
    "description": "Shift position that users should be added to",&#13;
    "readOnly": "false",&#13;
    "fieldType": "reference",&#13;
    "mandatory": "true",&#13;
    "defaultValue": "",&#13;
    "typeMetadata": {"reference": "x_802331_eyva_shift_position"}&#13;
  }&#13;
]</props>
        <required_translations>[ {
  "message" : "Shift position",
  "comment" : ""
}, {
  "message" : "Shift position that users should be added to",
  "comment" : ""
}, {
  "message" : "Workers",
  "comment" : ""
}, {
  "message" : "Workers and assignments being saved",
  "comment" : ""
} ]</required_translations>
        <schema_version>1.0.0</schema_version>
        <script><![CDATA[function transform(input) {
	input.workers.forEach(function(wkr) {
		if (wkr.deleted && wkr.shiftPositionWorker) {
			var grToDelete = new GlideRecord('x_802331_eyva_shift_position_worker');
			grToDelete.get(wkr.shiftPositionWorker);
			gs.info('Delete ' + wkr.label);
		}
		if (wkr.deleted && wkr.shiftWorker) {
			var grToDelete = new GlideRecord('x_802331_eyva_shift');
			grToDelete.get(wkr.shiftWorker);
			gs.info('Delete ' + wkr.label);
		}
		if (!wkr.active) {
			return;
		}
		if (wkr.id == 'new-worker') {
			// Create user and worker
		}
		if (!wkr.shiftWorker) {
			// Add worker to shift
		}
		if (!wkr.shiftPositionWorker && wkr.assigned) {
			// Add worker to position
		}
		if (wkr.shiftPositionWorker && !wkr.assigned) {
			// Remove worker from position
		}
		if (wkr.shiftPositionWorker && wkr.assigned) {
			// Move worker to new position
		}
	});
	return { message: 'Worker assignments updated' };
}]]></script>
        <sys_class_name>sys_ux_data_broker_transform</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-08-02 04:16:41</sys_created_on>
        <sys_id>2955a1d347d031102dabcd9bd36d438d</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>MSP modal save action</sys_name>
        <sys_package display_value="Eyva" source="x_802331_eyva">04928fc32fd41110da77c886f699b615</sys_package>
        <sys_policy/>
        <sys_scope display_value="Eyva">04928fc32fd41110da77c886f699b615</sys_scope>
        <sys_update_name>sys_ux_data_broker_transform_2955a1d347d031102dabcd9bd36d438d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-02 05:50:10</sys_updated_on>
    </sys_ux_data_broker_transform>
    <sys_translated_text action="delete_multiple" query="documentkey=2955a1d347d031102dabcd9bd36d438d"/>
</record_update>
