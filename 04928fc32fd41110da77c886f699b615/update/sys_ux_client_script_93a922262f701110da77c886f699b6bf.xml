<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes/>
        <macroponent display_value="Assignments">d86858672f101110da77c886f699b6d4</macroponent>
        <name>repeater_3_repeatWith</name>
        <preset/>
        <required_translations>[ ]</required_translations>
        <script><![CDATA[/**
  * @param {params} params
  * @param {api} params.api
  * @param {TransformApiHelpers} params.helpers
  */
function evaluateProperty({api, helpers}) {
  var shiftPositionWorkers;
  if (api.state.auto_save) {
    shiftPositionWorkers = api.data.look_up_shift_position_workers.results;
  } else {
    shiftPositionWorkers = api.state.shift_position_workers_replica;
  }

  if (!api.item.value.unassignedWorkers) {
    // Show workers for current position
    return shiftPositionWorkers.filter(function(it) {
      return it.shift_position._reference.position.value == api.item.value.position.value
        && it.shift_worker._reference.shift._reference.order_in_the_day.value == api.state.selected_shift;
    });
  } else {

    /*
    var assignedWorkersIds = shiftPositionWorkers.filter(function(it) {
      return it.shift_worker._reference.shift._reference.order_in_the_day.value == api.state.selected_shift
        && it.shift_position.value != 'unassigned';
    }).map(function(it) {
      return it.shift_worker._reference.worker.value;
    });
    
    var unassignedWorkers = api.data.look_up_shift_workers.results.filter(function(it) {
      return it.shift._reference.order_in_the_day.value == api.state.selected_shift
        && !assignedWorkersIds.includes(it.worker.value);
    });

    // Show unassigned workers (simulate data from a "shift position worker" record)
    var unassignedShiftWorkers = [];
    unassignedWorkers.forEach(function(it) {
      unassignedShiftWorkers.push({
        _row_data: {
          displayValue: api.item.value.position.displayValue,
          uniqueValue: api.item.value.position.value
        },
        shift_worker: {
          value: it._row_data.uniqueValue,
          _reference: it
        }
      });
    });
    */
    if (api.state.auto_save) {
      return api.state.unassigned_workers;
    } else {
      return api.state.unassigned_workers_replica;
    }
  }
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-23 05:27:27</sys_created_on>
        <sys_id>93a922262f701110da77c886f699b6bf</sys_id>
        <sys_mod_count>20</sys_mod_count>
        <sys_name>repeater_3_repeatWith</sys_name>
        <sys_package display_value="Eyva" source="x_802331_eyva">04928fc32fd41110da77c886f699b615</sys_package>
        <sys_policy/>
        <sys_scope display_value="Eyva">04928fc32fd41110da77c886f699b615</sys_scope>
        <sys_update_name>sys_ux_client_script_93a922262f701110da77c886f699b6bf</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-07-29 21:02:38</sys_updated_on>
        <target/>
        <type>transform</type>
    </sys_ux_client_script>
</record_update>
