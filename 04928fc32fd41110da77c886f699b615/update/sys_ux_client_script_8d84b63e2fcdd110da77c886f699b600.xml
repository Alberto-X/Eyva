<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes/>
        <macroponent display_value="Return">f484763e2fcdd110da77c886f699b6f2</macroponent>
        <name>Create return transfer order</name>
        <required_translations/>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 * @param {ApiHelpers} params.helpers
 */
function handler({api, event, helpers, imports}) {
    var quantity = api.state.quantity;
    var reason = api.state.reason;
    var dataBrokerResponse = api.data.look_up_record.result;
    var received = dataBrokerResponse.quantity_received.value; //) ? 0 : dataBrokerResponse.quantity_received.value;
    var returned = dataBrokerResponse.quantity_returned.value; //) ? 0 : dataBrokerResponse.quantity_returned.value;
    received = parseInt(received, 10);
    returned = parseInt(returned, 10);
    var remainingQuanity = received - returned;
    if (!quantity || isNaN(quantity)) {
        helpers.translate("Please enter a non-zero number for quantity").then(
            (value) => {
                api.setState("errorMessage",value);
            }
        );
    } else if(!reason || reason === ''){
        helpers.translate("Please specify reason").then(
            (value) => {
                api.setState("errorMessage",value);
            }
        );
        
    }else {
        quantity = parseInt(quantity, 10);
        if (quantity < 1) {
            helpers.translate("Please enter a non-zero number for quantity").then(
                (value) => {
                    api.setState("errorMessage",value);
                }
            );
        } else if (quantity > remainingQuanity) {
            helpers.translate("Quantity cannot be greater than "+remainingQuanity).then(
                (value) => {
                    api.setState("errorMessage",value);;
                }
            );
        } else {
            api.data.return_transfer_order.execute({
                "sysId": api.context.props.sysId,
                "quantity": api.state.quantity,
                "defective": api.state.defective,
                "reason": api.state.reason
            });
        }
    }
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-05 11:08:58</sys_created_on>
        <sys_id>8d84b63e2fcdd110da77c886f699b600</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Create return transfer order</sys_name>
        <sys_package display_value="Eyva" source="x_802331_eyva">04928fc32fd41110da77c886f699b615</sys_package>
        <sys_policy/>
        <sys_scope display_value="Eyva">04928fc32fd41110da77c886f699b615</sys_scope>
        <sys_update_name>sys_ux_client_script_8d84b63e2fcdd110da77c886f699b600</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-08-05 11:08:58</sys_updated_on>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
