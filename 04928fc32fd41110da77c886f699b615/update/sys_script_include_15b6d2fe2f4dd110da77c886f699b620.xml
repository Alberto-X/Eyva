<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_802331_eyva.EyvaUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Utility functions for managing worker assignments with Eyva.</description>
        <name>EyvaUtils</name>
        <script><![CDATA[var EyvaUtils = Class.create();
EyvaUtils.prototype = {
    initialize: function() {
		this.PROFICIENT = {label: 'proficient', id: '5ad8b8532f9c1110da77c886f699b644'};
		this.NEEDSTRAINING = {label: 'needsTraining', id: '170a34532f9c1110da77c886f699b638'};
		this.NEEDSHELP = {label: 'needsHelp', id: '3a0938532f9c1110da77c886f699b64c'};
		this.UNQUALIFIED = {label: '', id: 'f49a34d32f9c1110da77c886f699b6e6'};
    },
	
	/**
	  * Determine if a user is qualified for the given position.
	  *
	  * @params
	  *     worker       : GlideRecord of worker
	  *     position     : GlideRecord of position
	  *
	  * @returns
	  *     string indicating level of proficiency (empty string if not qualified at all)
	  */
	isWorkerQualifiedForPosition: function(worker, position) {
		// Get skills of the worker
		var workerSkillGr = new GlideRecord('x_802331_eyva_worker_skill');
		workerSkillGr.addQuery('worker', worker.sys_id);
		workerSkillGr.query();
		
		var workerSkills = {};
		while (workerSkillGr.next()) {
			var skillId = workerSkillGr.getValue('skill');
			workerSkills[skillId] = workerSkillGr.getValue('mastery');
		}
		
		// Get required skills for the position
		var positionSkillGr = new GlideRecord('x_802331_eyva_position_skill');
		positionSkillGr.addQuery('position', position.sys_id);
		positionSkillGr.query();
		while (positionSkillGr.next()) {
			var skillId = positionSkillGr.getValue('skill');
			
			// If worker doesn't have a skill
			if (!workerSkills[skillId] || workerSkills[skillId] == this.UNQUALIFIED.id) {
				return this.UNQUALIFIED.label;
			} // If worker needs help with a skill
			else if (workerSkills[skillId] == this.NEEDSTRAINING.id || workerSkills[skillId] == this.NEEDSHELP.id) {
				return this.NEEDSHELP.label;
			}
		}
		
		// If made it here, worker is proficient (or position requires nothing special)
		return this.PROFICIENT.label;
	},

    type: 'EyvaUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-05 09:58:37</sys_created_on>
        <sys_id>15b6d2fe2f4dd110da77c886f699b620</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>EyvaUtils</sys_name>
        <sys_package display_value="Eyva" source="x_802331_eyva">04928fc32fd41110da77c886f699b615</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Eyva">04928fc32fd41110da77c886f699b615</sys_scope>
        <sys_update_name>sys_script_include_15b6d2fe2f4dd110da77c886f699b620</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-08-05 10:00:55</sys_updated_on>
    </sys_script_include>
</record_update>
