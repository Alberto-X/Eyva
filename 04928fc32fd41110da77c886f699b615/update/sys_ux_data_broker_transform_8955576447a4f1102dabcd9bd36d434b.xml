<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_data_broker_transform">
    <sys_ux_data_broker_transform action="INSERT_OR_UPDATE">
        <acl_failure_result/>
        <api_name>x_802331_eyva.Transform event dates into select data</api_name>
        <description>Retrieves all dates for selected event and formats list into "Select" component data.</description>
        <mutates_server_data>false</mutates_server_data>
        <name>Transform event dates into select data</name>
        <output_schema>{&#13;
  "title": "Dates",&#13;
  "description": "A list of dates",&#13;
  "fieldType": "array",&#13;
  "items": {&#13;
    "fieldType": "object",&#13;
    "properties": {&#13;
      "id": {&#13;
        "description": "The unique identifier for a date",&#13;
        "fieldType": "string"&#13;
      },&#13;
      "label": {&#13;
        "description": "Display value of the date",&#13;
        "fieldType": "string"&#13;
      },&#13;
      "sublabel": {&#13;
        "description": "Description of the date",&#13;
        "fieldType": "string"&#13;
      }&#13;
    }&#13;
  }&#13;
}</output_schema>
        <private>false</private>
        <props>[&#13;
  {&#13;
    "name": "event",&#13;
    "label": "Event",&#13;
    "description": "Event to get dates for",&#13;
    "readOnly": "false",&#13;
    "fieldType": "string",&#13;
    "mandatory": "true",&#13;
    "defaultValue": ""&#13;
  }&#13;
]</props>
        <required_translations>[ {
  "message" : "Event",
  "comment" : ""
}, {
  "message" : "Event to get dates for",
  "comment" : ""
} ]</required_translations>
        <schema_version>1.0.0</schema_version>
        <script><![CDATA[function transform(input) {
	var shifts = new GlideRecord('x_802331_eyva_shift');
	shifts.addEncodedQuery('event='+input.event+'^order_in_the_day=1');
	shifts.orderBy('start_time');
	shifts.query();

	var dates = [];
	var dayNumber = 1;
	while (shifts.next()) {
		var fullDate = new GlideDate(new GlideDateTime(shifts.getValue('start_time')).getDate()).getDisplayValueLang('full');
		dates.push({
			id: shifts.getValue('start_time'),
			label: fullDate.slice(0, fullDate.length - 6),
			sublabel: 'Day ' + dayNumber
		});
		dayNumber++;
	}
	return dates;
}]]></script>
        <sys_class_name>sys_ux_data_broker_transform</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-08-06 10:05:31</sys_created_on>
        <sys_id>8955576447a4f1102dabcd9bd36d434b</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>Transform event dates into select data</sys_name>
        <sys_package display_value="Eyva" source="x_802331_eyva">04928fc32fd41110da77c886f699b615</sys_package>
        <sys_policy/>
        <sys_scope display_value="Eyva">04928fc32fd41110da77c886f699b615</sys_scope>
        <sys_update_name>sys_ux_data_broker_transform_8955576447a4f1102dabcd9bd36d434b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-08-06 11:15:04</sys_updated_on>
    </sys_ux_data_broker_transform>
    <sys_translated_text action="delete_multiple" query="documentkey=8955576447a4f1102dabcd9bd36d434b"/>
</record_update>
